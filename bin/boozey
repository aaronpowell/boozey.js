#!/usr/bin/env node

var program = require('commander');
var boozey = require('../src/boozey.js');
var stream = require('stream');
var prettyjson = require('prettyjson');

program
    .version(boozey.version)
    .option('-t, --token <token>', 'API token')
    .option('-p, --pretty', 'Pretty print the result')
    .option('--page [page]', 'Page number to get', Number, 1)
    .option('-pp, --per-page [perPage]', 'Records per page', Number, 50)
    .option('--order-by [order]', 'Field to order by', String, 'id')
    .option('-d, --direction [dir]', 'Sort order direction, ASC or DESC', String, 'ASC')
    .option('-q, --query [query]', 'Query to use to filter the data set')
    .option('-i, --id <id>', 'Id of the specific beer to get');

program
    .command('beer')
    .description('Perform operations for beer')
    .action(function () {
        var beers;
        if (!program.id) {
            beers = boozey.beer.all({
                token: program.token,
                page: program.page,
                perPage: program.perPage,
                order: program.order,
                dir: program.dir,
                query: program.query
            });
        } else {
            beers = boozey.beer.get(program.id, process.token);
        }
        go(beers);
    });

program
    .command('brewery')
    .description('Perform options for a brewery')
    .action(function () {
        var brewery;
        if (!program.id) {
            brewery = boozey.brewery.all({
                token: program.token,
                page: program.page,
                perPage: program.perPage,
                order: program.order,
                dir: program.dir,
                query: program.query
            });
        } else {
            brewery = boozey.brewery.get(program.id, process.token);
        }
        go(brewery);
    });

program.parse(process.argv);

function go(req) {
    var s = new stream.Stream();
    s.writable = true;
    var x = '';
    s.write = function (data) {
        x += data;
    };
    s.end = function () {
        x = program.pretty ? prettyjson.render(JSON.parse(x)) : x;
        process.stdout.write(x);
        process.stdout.write('\n');
    };
    req.pipe(s);
}